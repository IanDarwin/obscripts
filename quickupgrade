#!/bin/sh -u

# quickupdate -- quickly update base files from snapshot

# Set defaults before getopt...

ARCH=`uname -m`
DEST=/
BASE=YES
X=NO
KERNEL=NO
VERBOSE=""
MERGEMASTER=NO
BACKUP=NO

REL=39				# "26" for OpenBSD 2.6, etc.
RELDIR=3.9			# same but with a dot
RELDIR=snapshots

EXT=tgz

DOWNLOAD=$HOME/download/OpenBSD		# base dir for finding dist sets

USAGE="$0 [-a arch][-b][-d dest][-x][-k][-m][-v]"

function usage {		# give usage message, and exit
	echo "Usage: $USAGE
	[-v]	add -v to 'tar x' command.
	[-b]	do NOT install BASE
	[-d dest]	Desination dir [${DEST}]
	[-a arch]	i386, sparc, etc. [${ARCH}]
	[-e]	exec format has changed, backup executables first
	[-k]	include kernel [don't]
	[-p]	prefix for finding download files [/usr/download || ~ftp]
	[-s]	use snapshot [use release]
	[-x]	include X11 [don't]
	[-m]	Run MergeMaster when done [don't] (requires full /usr/src)" 2>&1
	exit 1
}

while getopts "a:bd:ekmp:rsxv" opt 
do 
 	 case "$opt" in 
		a)	ARCH=${OPTARG};;
		b)	BASE=NO;;
		d)	DEST=${OPTARG};;
		e)	BACKUP=YES;;
		k)	KERNEL=YES;;
		m)	MERGEMASTER=YES;;
		p)	DOWNLOAD=${OPTARG};;
		s)	RELDIR="3.7";;	# stable, not snapshots
		x)	X=YES;;
		v)	VERBOSE='v';;
		*)	usage;;
	esac
done
shift `expr $OPTIND - 1`		 # leave just filenames

if [ -d ${DOWNLOAD}/${RELDIR}/${ARCH} ]; then
	cd ${DOWNLOAD}/${RELDIR}/${ARCH} || exit
elif [ -d ~ftp/pub/OpenBSD/${RELDIR}/${ARCH} ]; then
	 cd ~ftp/pub/OpenBSD/${RELDIR}/${ARCH} || exit
fi

# Check this AFTER getopts so -h works without sudo
if [ ! -w / ]; then
	echo "$0: Need root permission to run"
	exit 1
fi

echo -n "OK to run quickupgrade on host `hostname` from ${PWD}? [nyq]"
read ans
case ${ans} in
	y*)	;;
	*)	exit 1;;
esac

# NEVER include etc in this list, or you will die horribly!
BDIRS="base comp misc man"
XDIRS="xbase xfont xserv xshare"
DIRS=""
if [ "NO" != ${BASE} ]; then
	DIRS="${BDIRS}"
fi
if [ "YES" = ${X} ]; then
	DIRS="${DIRS} ${XDIRS}"
fi

case ${BACKUP} in
	YES)
		for dir in /bin /usr/bin /sbin /usr/sbin
		do echo "Backing up $dir..."
			cp -r $dir $dir.backup
			PATH=$dir.backup:$PATH
		done
		;;
esac

for f in ${DIRS}
do
	FILE="${f}${REL}.${EXT}"
	if [ -f ${FILE} ]; then
		echo "===> `pwd`/$f (${FILE})" >&2
	else
		echo "Cannot locate file ${FILE}"
		exit
	fi
	(cd ${DEST} || exit; tar xzpf${VERBOSE} - ) < ${FILE}
done

if [ "$KERNEL" = "YES" ]; then
	if [ -f bsd ]; then
		cp bsd ${DEST}/nbsd && echo Kernel installed as /nbsd
	else
		echo "File ./bsd not found, not installing /bsd" >&2
	fi
else
	echo "No -k argument, not installing kernel." >&2
fi

echo "*** REMEMBER TO RUN POSTUPGRADE ***"

if [ "$MERGEMASTER" = "YES" ]; then
	(cd /tmp; tar xzpf - ) < etc${REL}.tgz
	mergemaster -r /tmp
else
	echo "No -m, not running mergemaster" >&2
fi

if [ -r /upgrade.site ]; then
	echo "Running /upgrade.site" >&2
	cd /
	sh ./upgrade.site
fi
