#!/bin/sh -u

# quickupdate -- quickly update base files from snapshot

# Set defaults before getopt...

ARCH=`uname -m`
DEST=/
BASE=YES
X=NO
KERNEL=NO
VERBOSE=""
MERGEMASTER=NO

REL=31				# "26" for OpenBSD 2.6, etc.
#RELDIR=3.1			# same but with a dot
RELDIR=snapshots	# when not -stable

case ${REL} in
	2[0-6])		EXT=tar.gz;;
	2[789]|3*)	EXT=tgz;;
esac

USAGE="$0 [-a arch][-b][-d dest][-x][-k][-m][-v]"

function usage {		# give usage message, and exit
	echo "Usage: $USAGE
	[-v]	add -v to 'tar x' command.
	[-b]	do NOT install BASE
	[-d dest]	Desination dir [${DEST}]
	[-a arch]	i386, sparc, etc. [${ARCH}]
	[-k]	include kernel [don't]
	[-x]	include X11 [don't]
	[-m]	Run MergeMaster when done [don't] (requires full /usr/src)" 2>&1
	exit 1
}

while getopts "abdkmxv" opt 
do 
 	 case "$opt" in 
		a)	ARCH=${OPTARG};;
		b)	BASE=NO;;
		d)	DEST=${OPTARG};;
		k)	KERNEL=YES;;
		m)	MERGEMASTER=YES;;
		x)	X=YES;;
		v)	VERBOSE='v';;
		*)	usage;;
	esac
done
shift `expr $OPTIND - 1`		 # leave just filenames

# Put this AFTER getopts so -h works without sudo
if [ ! -w / ]; then
	echo "$0: Need root permission to run"
	exit 1
fi

# NEVER include etc in this list, or you will die horribly!
BDIRS="base comp misc man"
XDIRS="xbase xfont xserv xshare"
DIRS=""
if [ "NO" != ${BASE} ]; then
	DIRS="${BDIRS}"
fi
if [ "YES" = ${X} ]; then
	DIRS="${DIRS} ${XDIRS}"
fi

if [ -d /usr/download/OpenBSD/${RELDIR}/${ARCH} ]; then
	 cd /usr/download/OpenBSD/${RELDIR}/${ARCH} || exit
elif [ -d ~ftp/pub/OpenBSD/${RELDIR}/${ARCH} ]; then
	 cd ~ftp/pub/OpenBSD/${RELDIR}/${ARCH} || exit
fi

for f in ${DIRS}
do
	FILE="${f}${REL}.${EXT}"
	if [ -f ${FILE} ]; then
		echo "===> $f (${FILE})" >&2
	else
		echo "Cannot locate file ${FILE}"
		exit
	fi
	(cd ${DEST} || exit; tar xzpf${VERBOSE} - ) < ${FILE}
done

if [ "$KERNEL" = "YES" ]; then
	if [ -f bsd ]; then
		cp bsd ${DEST}/nbsd && echo Kernel installed as /nbsd
	else
		echo "File ./bsd not found, not installing /bsd" >&2
	fi
else
	echo "No -k argument, not installing kernel." >&2
fi

echo "*** REMEMBER TO RUN POSTUPGRADE ***"

if [ "$MERGEMASTER" = "YES" ]; then
	(cd /tmp; tar xzpf - ) < etc${REL}.tgz
	mergemaster -r /tmp
else
	echo "No -m, not running mergemaster" >&2
fi
